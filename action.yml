name: Send a notification to Slack with the status of a workflow
description: |
  Push the result of a workflow to a Slack channel.

  ```yaml
  jobs:
    notify:
      runs-on: ubuntu-latest
      needs: [job-a, job-b]
      steps:
        - name: Post status to Slack
          uses: equisoft-actions/notify-workflow-status@v2
          with:
            needs: $ {{ toJSON(needs) }}
            slack-bot-token: $ {{ secrets.SLACK_BOT_TOKEN }}
            slack-channel: awt-ci-alerts
  ```

inputs:
  needs:
    description: |
      The GitHub Actions `needs` context which should be passed in using toJSON(): `$ {{ toJSON(needs) }}`.
      The notify jobs must depend on the jobs that you want to monitor.
    required: false
  downgrade-to-warning:
    description: |
      Comma-separated list of jobs that should be downgraded to a warning status instead of a failure.
    required: false
  notify-statuses:
    description: |
      Comma-separated list of statuses for which notifications will be published. Allowed values are cancelled, failure, success or warning.
      Defaults to 'failure,warning'.
    required: false
    default: failure,warning
  slack-bot-token:
    description: The bot token used to authenticate with Slack.
    required: true
  slack-channel:
    description: |
      The Slack channel where the notification will be sent.
      Defaults to 'ops-ci'.
    required: false
    default: "ops-ci"
  workflow-status:
    description: |
      The workflow status. Must be one of cancelled, failure, success or warning.
      If specified, it has precedence over `needs`.
    required: false

outputs:
  status:
    description: The status of the workflow. Can be one of cancelled, failure, success or warning.
    value: ${{ steps.workflow.outputs.status }}

runs:
  using: composite
  steps:
    - name: Find workflow status
      id: workflow
      uses: actions/github-script@v7
      with:
        script: |
          const main = require(`${process.env.GITHUB_ACTION_PATH}/src/main.js`);
          // Workaround for https://github.com/actions/toolkit/issues/1124
          const inputs = ${{ toJson(inputs) }};
          main({ core, inputs });

    - name: Post status to Slack
      uses: slackapi/slack-github-action@v1
      if: contains(inputs.notify-statuses, steps.workflow.outputs.status)
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
      with:
        channel-id: ${{ inputs.slack-channel }}
        payload: |
          {
            "attachments": [
              {
                "color": "#${{ steps.workflow.outputs.status == 'success' && '36a64f' || steps.workflow.outputs.status == 'failure' && 'ff0000' || '808080' }}",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "<${{ github.event.repository.html_url }}|${{ github.repository }}>/<${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}>: Run ${{ steps.workflow.outputs.status }}!"
                    },
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Ref*"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Workflow*"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "${{ github.ref_name }}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "<${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}>"
                      }
                    ]
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "*Last commit*\n<${{ github.event.head_commit.url }}|${{ github.event.head_commit.id }}>"
                    }
                  }
                ]
              }
            ]
          }
